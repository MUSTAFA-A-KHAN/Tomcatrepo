name: Install Tomcat on Linux

on:
  push:
    branches:
      - main

jobs:
  install-tomcat:
    runs-on: ubuntu-latest

    env:
      CATALINA_HOME: ${{ github.workspace }}/a/Tomcatrepo/Tomcatrepo/Tomcat/apache-tomcat-10.0.14

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Chocolatey environment (if needed)
        run: |
          # If Chocolatey is not needed, you can remove this step
          echo "Chocolatey setup is not required on Linux."

      - name: Download and Install Tomcat
        run: |
          # Download and install Tomcat
          mkdir -p $env:CATALINA_HOME
          wget -O tomcat.tar.gz 'https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.14/bin/apache-tomcat-10.0.14.tar.gz'
          tar -xzf tomcat.tar.gz -C $env:CATALINA_HOME --strip-components=1
          rm tomcat.tar.gz

          # Add Tomcat bin directory to PATH
          export PATH=$PATH:$env:CATALINA_HOME/bin

      - name: Debug Info
        run: |
          printenv
          ls -R $env:CATALINA_HOME

      - name: Start Tomcat
        run: |
          sh $env:CATALINA_HOME/bin/startup.sh
          sleep 30  # Increased sleep time

      - name: Display Tomcat Logs
        run: cat $env:CATALINA_HOME/logs/catalina.out

      - name: Wait for Tomcat to start
        run: |
          url='http://localhost:8080/'
          max_attempts=30
          attempts=0

          # Wait for Tomcat to start by checking if it responds to HTTP requests
          while [ $attempts -lt $max_attempts ]; do
              if curl --output /dev/null --silent --head --fail $url; then
                  echo "Tomcat has started successfully."
                  break
              else
                  echo "Waiting for Tomcat to start. Attempt $((attempts + 1)) of $max_attempts..."
                  sleep 10
                  ((attempts++))
              fi
          done

          if [ $attempts -ge $max_attempts ]; then
              echo "Timed out waiting for Tomcat to start."
              exit 1
          fi

      - name: Start ngrok and expose Tomcat port
        run: |
          # Start ngrok and expose Tomcat port
          wget 'https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip'
          unzip ngrok-stable-linux-amd64.zip
          java -version
          ./ngrok authtoken 1x4H0neaMfnRX0ATJsuLhMP3lt3_tEj68PPQBGSMmY8wMHH
          ./ngrok http 8080  # Change 8080 to the Tomcat port you want to expose
