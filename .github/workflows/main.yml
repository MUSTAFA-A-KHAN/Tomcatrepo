on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Tomcat and JDK
      run: |
        sudo apt-get update
        sudo apt-get install -y tomcat9 default-jdk tomcat9-admin

    - name: Set JAVA_HOME variable
      run: echo "export JAVA_HOME=/usr/lib/jvm/default-java" >> $HOME/.bashrc && source $HOME/.bashrc

    - name: Download WAR file
      run: |
        wget https://raw.githubusercontent.com/MUSTAFA-A-KHAN/freeevps2/main/WebAppJava-0.0.1-SNAPSHOT.war -O your-app.war

    - name: Copy WAR file to Tomcat webapps directory
      run: |
        sudo cp your-app.war /var/lib/tomcat9/webapps/

    - name: Restart Tomcat
      run: |
        sudo systemctl restart tomcat9

    

    - name: Display Tomcat status
      run: sudo systemctl status tomcat9

    - name: Change credentials
      run: sudo sed -i '/<\/tomcat-users>/i \    <user username="admin" password="admin" roles="manager-gui"\/>' /etc/tomcat9/tomcat-users.xml

          
    - name: Display contents of usres.xml
      run: cat /etc/tomcat9/tomcat-users.xml

    
    - name: Download and extract ngrok
      run: |
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip

    - name: Start ngrok and expose Tomcat port
      run: |
        ./ngrok authtoken 1x4H0neaMfnRX0ATJsuLhMP3lt3_tEj68PPQBGSMmY8wZMHH
        ./ngrok http 8080  # Assuming Tomcat is running on the default HTTP port 8080

    # Add additional steps as needed for your specific use case
